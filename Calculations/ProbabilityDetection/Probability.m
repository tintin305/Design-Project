
numPulses = 1;
probabilityDetection = 0.3:0.01:1;
probabilityFalseAlarm = 10^(-1);
%10^(-8):10^(-1):10^(-1);

A = log(0.62/probabilityFalseAlarm);
B = log((probabilityDetection)./(1-probabilityDetection));

SNR1 = -5 .* log10(numPulses) + (6.2 + (4.54)./(sqrt(numPulses + 0.44))) .* log10(A + 0.12 .* A .* B + 1.7 .* B);

probabilityFalseAlarm = 10^(-2);
A = log(0.62/probabilityFalseAlarm);
SNR2 = -5 .* log10(numPulses) + (6.2 + (4.54)./(sqrt(numPulses + 0.44))) .* log10(A + 0.12 .* A .* B + 1.7 .* B);

probabilityFalseAlarm = 10^(-3);
A = log(0.62/probabilityFalseAlarm);
SNR3 = -5 .* log10(numPulses) + (6.2 + (4.54)./(sqrt(numPulses + 0.44))) .* log10(A + 0.12 .* A .* B + 1.7 .* B);

probabilityFalseAlarm = 10^(-4);
A = log(0.62/probabilityFalseAlarm);
SNR4 = -5 .* log10(numPulses) + (6.2 + (4.54)./(sqrt(numPulses + 0.44))) .* log10(A + 0.12 .* A .* B + 1.7 .* B);

probabilityFalseAlarm = 10^(-4);
A = log(0.62/probabilityFalseAlarm);
SNR5 = -5 .* log10(numPulses) + (6.2 + (4.54)./(sqrt(numPulses + 0.44))) .* log10(A + 0.12 .* A .* B + 1.7 .* B);

probabilityFalseAlarm = 10^(-5);
A = log(0.62/probabilityFalseAlarm);
SNR6 = -5 .* log10(numPulses) + (6.2 + (4.54)./(sqrt(numPulses + 0.44))) .* log10(A + 0.12 .* A .* B + 1.7 .* B);

hold on;
plot(real(probabilityDetection),SNR1,'k')
plot(real(probabilityDetection),SNR2,'k')
plot(abs(probabilityDetection),SNR3,'k')
plot(abs(probabilityDetection),SNR4,'k')
plot(abs(probabilityDetection),SNR5,'k')
plot(abs(probabilityDetection),SNR6,'k')
hold off;

% 
% function createfigure(X1, YMatrix1)
% %CREATEFIGURE(X1, YMatrix1)
% %  X1:  vector of x data
% %  YMATRIX1:  matrix of y data
% 
% %  Auto-generated by MATLAB on 17-Oct-2018 14:24:52
% 
% % Create figure
% figure1 = figure;
% 
% % Create axes
% axes1 = axes('Parent',figure1);
% hold(axes1,'on');
% 
% % Create multiple lines using matrix input to plot
% plot(X1,YMatrix1,'Color',[0 0 0],'Parent',axes1);
% 
% % Create ylabel
% ylabel('Required SNR (dB)');
% 
% % Create xlabel
% xlabel('Desired P_D');
% 
% % Create title
% title('SNR Required to Successfully Detect an Object');
% 
% % Uncomment the following line to preserve the X-limits of the axes
% % xlim(axes1,[0.3 0.95]);
% box(axes1,'on');
% grid(axes1,'on');
% % Set the remaining axes properties
% set(axes1,'XTick',...
%     [0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95],'YTick',...
%     [-10 -8 -6 -4 -2 0 2 4 6 8 10 12 14 15]);
% % Create textbox
% annotation(figure1,'textbox',...
%     [0.142666666666666 0.552980132450332 0.0474375000000001 0.0695364238410596],...
%     'String','P_{fa} = 10^{-2}',...
%     'LineStyle','none',...
%     'FitBoxToText','off');
% 
% % Create textbox
% annotation(figure1,'textbox',...
%     [0.179645833333333 0.382450331125828 0.0474375000000001 0.0695364238410596],...
%     'String','P_{fa} = 10^{-1}',...
%     'LineStyle','none',...
%     'FitBoxToText','off');
% 
% % Create textbox
% annotation(figure1,'textbox',...
%     [0.139541666666666 0.632450331125826 0.0474375000000001 0.0695364238410596],...
%     'String','P_{fa} = 10^{-3}',...
%     'LineStyle','none',...
%     'FitBoxToText','off');
% 
% % Create textbox
% annotation(figure1,'textbox',...
%     [0.14475 0.685430463576156 0.0474375000000001 0.0695364238410596],...
%     'String','P_{fa} = 10^{-4}',...
%     'LineStyle','none',...
%     'FitBoxToText','off');
% 
% % Create textbox
% annotation(figure1,'textbox',...
%     [0.1463125 0.745033112582777 0.0474375000000001 0.0695364238410596],...
%     'String','P_{fa} = 10^{-5}',...
%     'LineStyle','none',...
%     'FitBoxToText','off');
% 

